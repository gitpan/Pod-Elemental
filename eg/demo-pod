#!perl
use strict;
use warnings;

use Moose::Autobox;
use Pod::Eventual::Simple;
use Pod::Elemental;
use Pod::Elemental::Selectors -all;
use Pod::Elemental::Transformer::Pod5;
use Pod::Elemental::Transformer::Nester;
use Pod::Elemental::Transformer::Gatherer;

my $str = do { local $/; <DATA> };

my $document = Pod::Elemental->read_string($str);

print $document->as_debug_string, "\n\n";

Pod::Elemental::Transformer::Pod5->transform_node($document);

print $document->as_debug_string, "\n\n";

my $nester = Pod::Elemental::Transformer::Nester->new({
  top_selector => s_command([ qw(head1 method) ]),
  content_selectors => [
    s_flat,
    s_command( [ qw(head2 head3 head4 over item back) ]),
  ],
});

my $gatherer = Pod::Elemental::Transformer::Gatherer->new({
  gather_selector => s_command([ qw(method) ]),
  container       => Pod::Elemental::Element::Nested->new({
    command => 'head1',
    content => "METHODS\n",
  }),
});

$nester->transform_node($document);

print $document->as_debug_string, "\n\n";

$gatherer->transform_node($document);

print $document->as_debug_string, "\n\n";

$gatherer->container->children->grep(s_command('method'))->each_value(sub {
  $_->command('head2');
});

print $document->as_debug_string, "\n\n";

__DATA__
=pod

Ordinary Paragraph 1.1

=begin :dialect Pod7

This is a paragraph.

=image foo

=end :dialect

=head1 Header 1.1

=head2 Header 2.1

=method foo

Ordinary Paragraph 2.1

=over 2

=item * bar

=back

=head2 Header 2.2

Ordinary Paragraph 2.2

=head3 Header 3.1

=over 4

=item * foo

=back

=head1 Header 1.2

Ordinary Paragraph 2.3

=begin comments

This is a big comment I have to write down.

It's not important, but it goes on and on.

=end comments

=method quux

Ordinary Paragraph 2.4

=cut
